{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","color","App","useState","setGoods","handlerLoadGood","f","result","console","log","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkB,UAAQ,OAA1B,SACGA,EAAKC,MADCD,EAAKE,UCLb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IAEJE,MAAK,SAAAP,GAAK,OAAIA,EAAMW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,KAAKW,cAAcD,EAAEV,SAAOY,MAAM,EAAG,OAGlEC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAP,GAAK,OAAIA,EAAMiB,QAAO,SAAAf,GAAI,MAAmB,QAAfA,EAAKgB,aCThCC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOpB,EAAP,KAAcqB,EAAd,KADiC,SAGlBC,EAHkB,8EAGjC,WAA+BC,GAA/B,eAAAX,EAAA,sEACuBW,IADvB,OACQC,EADR,OAGEH,EAASG,GAHX,4CAHiC,sBAYjC,OAFAC,QAAQC,IAAI,CAAC1B,IAGX,sBAAK2B,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAgBjB,IAHjC,4BAQA,wBACEuB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMP,EAAgBZ,IAHjC,gCAQA,wBACEkB,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAjB,EAAA,+EAAYU,EAAgBN,IAA5B,2CAHX,4BAQA,cAAC,EAAD,CAAWhB,MAAOA,GAAS,SC9CjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.473101ef.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} data-cy=\"good\">\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    // eslint-disable-next-line max-len\n    .then(goods => goods.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n// import { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from './api/goods';\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  async function handlerLoadGood(f: () => Promise<Good[]>) {\n    const result = await f();\n\n    setGoods(result);\n  }\n\n  // eslint-disable-next-line no-console\n  console.log([goods]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handlerLoadGood(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handlerLoadGood(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={async () => handlerLoadGood(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods || []} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}